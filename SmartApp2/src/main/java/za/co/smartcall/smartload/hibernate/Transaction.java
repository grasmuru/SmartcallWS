package za.co.smartcall.smartload.hibernate;

// Generated 18 Feb 2015 1:19:51 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "TRANSACTION")
public class Transaction implements java.io.Serializable {

	private int id;
	private Product product;
	private SubmissionStatus submissionStatus;
	private Date statusDate;
	private String transactionStatus;
	private boolean retrieved;
	private int resend;
	private String clientReference;
	private String amount;
	private String batchnumber;
	private String boxnumber;
	private BigDecimal cost;
	private String description;
	private BigDecimal discount;
	private String expirydate;
	private String password;
	private String orderRefNumber;
	private String smsRecipientMsisdn;
	private String additionalPin;
	private String ticketNumber;
	private boolean file;
	private String responseMessage;
	private Set<File> files = new HashSet<File>(0);
	private String voucherPin;
	private String lastFileName;
	private String deviceId;
	private boolean pinless;
	private long batchRequest;
	private Dealer dealer;

	public Transaction() {
	}

	public Transaction(int id, Product product,
			SubmissionStatus submissionStatus, Date statusDate,
			String transactionStatus, boolean retrieved, int resend, String amount,
			String batchnumber, String boxnumber, BigDecimal cost,
			String password, String orderRefNumber, String smsRecipientMsisdn,
			boolean file) {
		this.id = id;
		this.product = product;
		this.submissionStatus = submissionStatus;
		this.statusDate = statusDate;
		this.transactionStatus = transactionStatus;
		this.retrieved = retrieved;
		this.resend = resend;
		this.amount = amount;
		this.batchnumber = batchnumber;
		this.boxnumber = boxnumber;
		this.cost = cost;
		this.password = password;
		this.orderRefNumber = orderRefNumber;
		this.smsRecipientMsisdn = smsRecipientMsisdn;
		this.file = file;
	}

	public Transaction(int id, Product product,
			SubmissionStatus submissionStatus, Date statusDate,
			String transactionStatus, boolean retrieved, int resend, String clientReference,
			String amount, String batchnumber, String boxnumber,
			BigDecimal cost, String description, BigDecimal discount,
			String expirydate, String password, String orderRefNumber,
			String smsRecipientMsisdn, String additionalPin, String ticketNumber,
			boolean file, String responseMessage, Set<File> files) {
		this.id = id;
		this.product = product;
		this.submissionStatus = submissionStatus;
		this.statusDate = statusDate;
		this.transactionStatus = transactionStatus;
		this.retrieved = retrieved;
		this.resend = resend;
		this.clientReference = clientReference;
		this.amount = amount;
		this.batchnumber = batchnumber;
		this.boxnumber = boxnumber;
		this.cost = cost;
		this.description = description;
		this.discount = discount;
		this.expirydate = expirydate;
		this.password = password;
		this.orderRefNumber = orderRefNumber;
		this.smsRecipientMsisdn = smsRecipientMsisdn;
		this.additionalPin = additionalPin;
		this.ticketNumber = ticketNumber;
		this.file = file;
		this.responseMessage = responseMessage;
		this.files = files;
	}

	@Id @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCT", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SUB_STATUS", nullable = false)
	public SubmissionStatus getSubmissionStatus() {
		return this.submissionStatus;
	}

	public void setSubmissionStatus(SubmissionStatus submissionStatus) {
		this.submissionStatus = submissionStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "STATUS_DATE", nullable = false, length = 23)
	public Date getStatusDate() {
		return this.statusDate;
	}

	public void setStatusDate(Date statusDate) {
		this.statusDate = statusDate;
	}

	@Column(name = "TRANSACTION_STATUS", nullable = false, length = 50)
	public String getTransactionStatus() {
		return this.transactionStatus;
	}

	public void setTransactionStatus(String transactionStatus) {
		this.transactionStatus = transactionStatus;
	}

	@Column(name = "RETRIEVED", nullable = false)
	public boolean isRetrieved() {
		return this.retrieved;
	}

	public void setRetrieved(boolean retrieved) {
		this.retrieved = retrieved;
	}

	@Column(name = "RESEND", nullable = false)
	public int getResend() {
		return this.resend;
	}

	public void setResend(int resend) {
		this.resend = resend;
	}

	@Column(name = "CLIENT_REFERENCE", length = 50)
	public String getClientReference() {
		return this.clientReference;
	}

	public void setClientReference(String clientReference) {
		this.clientReference = clientReference;
	}

	@Column(name = "AMOUNT", nullable = false, length = 80)
	public String getAmount() {
		return this.amount;
	}

	public void setAmount(String amount) {
		this.amount = amount;
	}

	@Column(name = "BATCHNUMBER", nullable = false, length = 20)
	public String getBatchnumber() {
		return this.batchnumber;
	}

	public void setBatchnumber(String batchnumber) {
		this.batchnumber = batchnumber;
	}

	@Column(name = "BOXNUMBER", nullable = false, length = 20)
	public String getBoxnumber() {
		return this.boxnumber;
	}

	public void setBoxnumber(String boxnumber) {
		this.boxnumber = boxnumber;
	}

	@Column(name = "COST", nullable = false, scale = 4)
	public BigDecimal getCost() {
		return this.cost;
	}

	public void setCost(BigDecimal cost) {
		this.cost = cost;
	}

	@Column(name = "DESCRIPTION", length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	
	@Column(name = "DEVICE_ID", length = 50)
	public String getDeviceId() {
		return this.deviceId;
	}

	public void setDeviceId(String deviceId) {
		this.deviceId = deviceId;
	}

	@Column(name = "DISCOUNT", precision = 3)
	public BigDecimal getDiscount() {
		return this.discount;
	}

	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	@Column(name = "EXPIRYDATE", length = 20)
	public String getExpirydate() {
		return this.expirydate;
	}

	public void setExpirydate(String expirydate) {
		this.expirydate = expirydate;
	}

	@Column(name = "PASSWORD", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "ORDER_REF_NUMBER", nullable = false, length = 30)
	public String getOrderRefNumber() {
		return this.orderRefNumber;
	}

	public void setOrderRefNumber(String orderRefNumber) {
		this.orderRefNumber = orderRefNumber;
	}

	@Column(name = "SMS_RECIPIENT_MSISDN", nullable = false, length = 15)
	public String getSmsRecipientMsisdn() {
		return this.smsRecipientMsisdn;
	}

	public void setSmsRecipientMsisdn(String smsRecipientMsisdn) {
		this.smsRecipientMsisdn = smsRecipientMsisdn;
	}

	@Column(name = "ADDITIONAL_PIN", length = 50)
	public String getAdditionalPin() {
		return this.additionalPin;
	}

	public void setAdditionalPin(String additionalPin) {
		this.additionalPin = additionalPin;
	}

	@Column(name = "TICKET_NUMBER", length = 50)
	public String getTicketNumber() {
		return this.ticketNumber;
	}
	
	public void setVoucherPin(String voucherPin) {
		this.voucherPin = voucherPin;
	}
	
	@Column(name = "VOUCHER_PIN", length = 50)
	public String getVoucherPin() {
		return this.voucherPin;
	}
	
	public void setLastFileName(String lastFileName) {
		this.lastFileName = lastFileName;
	}
	
	@Column(name = "LASTFILENAME", length = 50)
	public String getLastFileName() {
		return this.lastFileName;
	}	
	

	public void setTicketNumber(String ticketNumber) {
		this.ticketNumber = ticketNumber;
	}

	@Column(name = "FILE", nullable = false)
	public boolean isFile() {
		return this.file;
	}

	public void setFile(boolean file) {
		this.file = file;
	}
	
	@Column(name = "PINLESS", nullable = false)
	public boolean isPinless() {
		return this.pinless;
	}

	public void setPinless(boolean pinless) {
		this.pinless = pinless;
	}


	@Column(name = "RESPONSE_MESSAGE", length = 50)
	public String getResponseMessage() {
		return this.responseMessage;
	}

	public void setResponseMessage(String responseMessage) {
		this.responseMessage = responseMessage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<File> getFiles() {
		return this.files;
	}

	public void setFiles(Set<File> files) {
		this.files = files;
	}
	
	public StringProperty productId() {
		 return new SimpleStringProperty(Integer.toString(product.getId()));
    }
	
		
	
	public StringProperty amount() {
        return new SimpleStringProperty(amount);
    }
	
	
	public StringProperty batchNumber() {
		 return new SimpleStringProperty(batchnumber);
    }
	
	public StringProperty boxNumber() {
		 return new SimpleStringProperty(boxnumber);
    }
	
	
	public StringProperty description() {
        return new SimpleStringProperty(description);
    }
	
	public StringProperty deviceId() {
        return new SimpleStringProperty(deviceId);
    }
	

	public StringProperty network() {
		if (product == null) return new SimpleStringProperty("Smartcall");
        return new SimpleStringProperty(product.getProducttype().getNetwork().getNetwork());
    }
	
	
	public StringProperty smsRecipientMsisdn() {
        return new SimpleStringProperty(smsRecipientMsisdn);
    }
	
	public StringProperty submissionStatus() {
        return new SimpleStringProperty(submissionStatus.getSubStatus());
    }
		
	public StringProperty transactionStatus() {
        return new SimpleStringProperty(transactionStatus);
    }
	

	public StringProperty statusDate() {
	   SimpleDateFormat sdf = new SimpleDateFormat("yy-MM-dd hh:mm:ss");
	   return new SimpleStringProperty(sdf.format(statusDate));
	}
	    

	public StringProperty voucherPin() {
        return new SimpleStringProperty(voucherPin);
    }
	
	@Column(name = "BATCH_REQUEST", nullable = false)
	public long getBatchRequest() {
		return this.batchRequest;
	}

	public void setBatchRequest(long batchRequest) {
		this.batchRequest = batchRequest;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEALER", nullable = false)
	public Dealer getDealer() {
		return this.dealer;
	}

	public void setDealer(Dealer dealer) {
		this.dealer = dealer;
	}
	
	@Transient
	public long getOrderRef(){
		return Long.parseLong(orderRefNumber);
	}
	
	@Transient
	public void setOrderRef(long orderRef){
		orderRefNumber = Long.toString(orderRef);
	}
	
	@Transient
	public String getBasicDescription(){
		return getStatusDate() + " " + getAmount() + " " + getDescription() + " "+getSubmissionStatus().getSubStatus() + " " + getDeviceId();
	}
	
	public int statusDateDifference(final Transaction other) {
		return statusDate.compareTo(other.statusDate);
	}


}
